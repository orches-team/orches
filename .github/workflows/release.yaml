name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"  # matches semantic version tags

jobs:
  tag-release:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write  # needed for creating releases

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for gh to work

      - name: Parse version
        id: release_info
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          MAJOR_MINOR=$(echo $VERSION | cut -d. -f1,2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major_minor=$MAJOR_MINOR" >> $GITHUB_OUTPUT

      - name: Copy images
        env:
          VERSION: ${{ steps.release_info.outputs.version }}
          MAJOR_MINOR: ${{ steps.release_info.outputs.major_minor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Login to ghcr.io
          echo "$GHCR_TOKEN" | skopeo login ghcr.io -u $ --password-stdin

          # Source image is the one from the commit that was tagged
          SRC_IMAGE="docker://ghcr.io/${{ github.repository }}:$GITHUB_SHA"

          # Copy to version-specific tags
          skopeo copy --all "$SRC_IMAGE" "docker://ghcr.io/${{ github.repository }}:$VERSION"
          skopeo copy --all "$SRC_IMAGE" "docker://ghcr.io/${{ github.repository }}:$MAJOR_MINOR"
          skopeo copy --all "$SRC_IMAGE" "docker://ghcr.io/${{ github.repository }}:latest"

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.release_info.outputs.version }}" \
            --notes-from-tag
